from pyspark.sql.functions import *
from pyspark.sql.types import *


from pyspark.sql import Row
from pyspark.sql.types import LongType, StringType, StructType, StructField
from pyspark.sql.types import ArrayType, DoubleType, IntegerType, LongType, StringType, StructType, StructField
from pyspark.sql.functions import col
from pyspark.sql.functions import sum
from pyspark.sql.functions import avg, approx_count_distinct
from pyspark.sql.functions import round
from pyspark.sql.types import TimestampType
from pyspark.sql.functions import date_format
from pyspark.sql.functions import year, month, dayofweek, minute, second
from pyspark.sql.functions import to_date
from pyspark.sql.functions import date_add
from pyspark.sql.types import DateType, StringType, StructField, StructType, TimestampType
import datetime
from pyspark.sql.functions import avg, approx_count_distinct
from pyspark.sql.types import LongType
from pyspark.sql.types import DoubleType
from pyspark.sql.functions import col, lit
from pyspark.sql.functions import udf

#question1DF = (spark.sql("select * from orders"))

question1DF = (spark
               .read
               .option("inferSchema", True)
               .table(orders_table)
              )

answer1DF = (question1DF
             .groupBy("shipping_address_state")
             .count()
             .orderBy("count", ascending=False)
)

"""answer1DF = (question1DF.groupBy("shipping_address_state")
             .agg(count("order_id").alias("count"))
             .sort(col("count").desc())
             .select("shipping_address_state", "count")
            )"""
#display(answer1DF)
answer1DF.createOrReplaceTempView(question_1_results_table)

from pyspark.sql.functions import col, avg, max, min, sum